1:HL["/_next/static/css/52f87e6b0f7ae474.css",{"as":"style"}]
2:HL["/_next/static/css/0140179f5997954c.css",{"as":"style"}]
0:["9VHNUHGJ3VNz8nLHwWlTe",[[["",{"children":["post",{"children":[["slug","11","d"],{"children":["__PAGE__?{\"slug\":\"11\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/52f87e6b0f7ae474.css","precedence":"next"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0140179f5997954c.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":3015,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","783:static/chunks/783-9ba320bbb751e4be.js","185:static/chunks/app/layout-f35aedab9bdb0faf.js"],"name":"","async":false}
6:I{"id":5681,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","783:static/chunks/783-9ba320bbb751e4be.js","185:static/chunks/app/layout-f35aedab9bdb0faf.js"],"name":"","async":false}
7:I{"id":1744,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","783:static/chunks/783-9ba320bbb751e4be.js","185:static/chunks/app/layout-f35aedab9bdb0faf.js"],"name":"","async":false}
8:I{"id":7773,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","783:static/chunks/783-9ba320bbb751e4be.js","185:static/chunks/app/layout-f35aedab9bdb0faf.js"],"name":"","async":false}
9:I{"id":7767,"chunks":["272:static/chunks/webpack-3391474f67f9d332.js","971:static/chunks/fd9d1056-158bd2a597018d29.js","596:static/chunks/596-eabdfb18d38341e5.js"],"name":"default","async":false}
a:I{"id":7920,"chunks":["272:static/chunks/webpack-3391474f67f9d332.js","971:static/chunks/fd9d1056-158bd2a597018d29.js","596:static/chunks/596-eabdfb18d38341e5.js"],"name":"default","async":false}
3:[["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico"}],[["$","$L5",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-LSSNKXXZKX","strategy":"afterInteractive"}],["$","$L5",null,{"id":"google-analytics","strategy":"afterInteractive","children":"\n        window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', \"G-LSSNKXXZKX\");\n        "}]]]}],["$","body",null,{"children":["$","$L6",null,{"children":["$","$L7",null,{"children":["$","$L8",null,{"children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","post","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","post","children",["slug","11","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lb",null],"segment":"__PAGE__?{\"slug\":\"11\"}"},"styles":[]}],"segment":["slug","11","d"]},"styles":[]}],"segment":"post"},"styles":[]}]}]}]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Next.js 프로젝트 폴더 구성 과 개발 규칙"}],["$","meta","2",{"name":"description","content":"Next.js 프로젝트 폴더 구성 과 개발 규칙"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1.0"}],["$","meta","4",{"property":"og:title","content":"Next.js 프로젝트 폴더 구성 과 개발 규칙"}],["$","meta","5",{"property":"og:description","content":"Next.js 프로젝트 폴더 구성 과 개발 규칙"}],["$","meta","6",{"property":"og:image","content":"https://shinyongjun.com/og-image.jpg"}],["$","meta","7",{"name":"twitter:card","content":"summary"}],["$","meta","8",{"name":"twitter:title","content":"Next.js 프로젝트 폴더 구성 과 개발 규칙"}],["$","meta","9",{"name":"twitter:description","content":"Next.js 프로젝트 폴더 구성 과 개발 규칙"}],["$","meta","10",{"name":"twitter:image","content":"https://shinyongjun.com/og-image.jpg"}]]
c:I{"id":3020,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","71:static/chunks/71-b439cf8fdc1a19ec.js","447:static/chunks/447-e49f8dd8f8c63a06.js","605:static/chunks/app/post/[slug]/page-6fb60b8e797552ee.js"],"name":"","async":false}
e:I{"id":886,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","71:static/chunks/71-b439cf8fdc1a19ec.js","447:static/chunks/447-e49f8dd8f8c63a06.js","605:static/chunks/app/post/[slug]/page-6fb60b8e797552ee.js"],"name":"","async":false}
10:I{"id":7137,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","71:static/chunks/71-b439cf8fdc1a19ec.js","447:static/chunks/447-e49f8dd8f8c63a06.js","605:static/chunks/app/post/[slug]/page-6fb60b8e797552ee.js"],"name":"","async":false}
11:I{"id":5797,"chunks":["576:static/chunks/576-3a4a1c7f09f7f0ae.js","396:static/chunks/396-7c70254e7292304b.js","198:static/chunks/198-e5e94c14e0e9d11e.js","71:static/chunks/71-b439cf8fdc1a19ec.js","447:static/chunks/447-e49f8dd8f8c63a06.js","605:static/chunks/app/post/[slug]/page-6fb60b8e797552ee.js"],"name":"","async":false}
d:T4b5a,/*@jsxRuntime automatic @jsxImportSource react*/
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = Object.assign({
    p: "p",
    br: "br",
    code: "code",
    h2: "h2",
    pre: "pre",
    h3: "h3",
    ul: "ul",
    li: "li",
    div: "div",
    span: "span"
  }, _provideComponents(), props.components);
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: ["개발의 확장성을 높이려면 일관성있는 구성과 규칙이 중요합니다.", _jsx(_components.br, {}), "\n", "이 글에선 ", _jsx(_components.code, {
        children: "next.js"
      }), " 개발을 보다 체계적으로 하기 위한 제 나름대로의 규칙들을 정리해보고자 합니다."]
    }), "\n", _jsx(_components.h2, {
      children: "폴더 구성"
    }), "\n", _jsxs(_components.p, {
      children: ["우선 폴더 구성부터 살펴보도록 하겠습니다. 참고로 저는 13버전의 ", _jsx(_components.code, {
        children: "app directory"
      }), " 방식을 채택했습니다."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        className: "",
        children: "/public\r\n ㄴ /icons\r\n ㄴ /images\r\n ㄴ /fonts\r\n\r\n/src\r\n ㄴ /app\r\n ㄴ /components\r\n ㄴ /constants\r\n ㄴ /hooks\r\n ㄴ /services\r\n ㄴ /stores\r\n ㄴ /styles\r\n ㄴ /types\r\n ㄴ /utils\n"
      })
    }), "\n", _jsx(_components.h2, {
      children: _jsx(_components.code, {
        children: "public"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["public 폴더는 next.js 에서 제공하는 기본 폴더입니다.", _jsx(_components.br, {}), "\n", "favicon, img, font 등의 정적 파일들을 위치시킵니다."]
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "icons"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["웹사이트 전반에 걸쳐 재사용 가능성이 높은 아이콘 이미지들을 모아둡니다.", _jsx(_components.br, {}), "\n", "작업자가 여러명일 중복 작업 확률을 낮추기 위해 별도 폴더를 생성했습니다."]
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsxs(_components.li, {
        children: [_jsx(_components.code, {
          children: "svg"
        }), " 파일 확장을 지향한다."]
      }), "\n"]
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "images"
      })
    }), "\n", _jsx(_components.p, {
      children: "앱에서 사용하는 이미지 파일 모음 폴더입니다."
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsxs(_components.li, {
        children: [_jsx(_components.code, {
          children: "webp"
        }), " 파일 확장을 지향한다."]
      }), "\n"]
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "fonts"
      })
    }), "\n", _jsx(_components.p, {
      children: "로컬 폰트를 사용할 경우 폰트파일이 위치할 폴더입니다."
    }), "\n", _jsx(_components.h2, {
      children: _jsx(_components.code, {
        children: "src"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["프로그램 파일들을 모아놓는 선택적 기본 폴더입니다.", _jsx(_components.br, {}), "\n", "next.js 앱을 생성할때 사용여부를 선택할 수 있습니다."]
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "app"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["next.js 13버전에서 추가된 폴더입니다. 기존 ", _jsx(_components.code, {
        children: "pages"
      }), " 폴더가 하던 auto routing 을 지원합니다. (", _jsx(_components.code, {
        children: "pages"
      }), " 폴더도 여전히 지원합니다.)"]
    }), "\n", _jsx(_components.p, {
      children: "아래는 제가 정한 app폴더 내부 규칙입니다."
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsxs(_components.li, {
        children: [_jsx(_components.code, {
          children: "server component"
        }), " 만 사용한다."]
      }), "\n", _jsx(_components.li, {
        children: "기본 제공하는 컴포넌트만 사용한다. (page, layout, loading 등)"
      }), "\n"]
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "components"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["대부분의 응용 프로그램 컴포넌트가 위치한 폴더입니다.", _jsx(_components.br, {}), "\n", "내부 구조는 그때그때 상황에 맞춰 수정, 추가 하며 기본적인 폴더만 미리 정의해보았습니다."]
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsxs(_components.li, {
        children: [_jsx(_components.code, {
          children: "base"
        }), " : Header, Footer, Container 등 레이아웃 컴포넌트"]
      }), "\n", _jsxs(_components.li, {
        children: [_jsx(_components.code, {
          children: "config"
        }), " : SEO, Metadata, Google Analytics, Google Fonts 등 앱 전반에 영향을 주는 설정 컴포넌트"]
      }), "\n"]
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "constants"
      })
    }), "\n", _jsx(_components.p, {
      children: "전역 상수 모음 폴더입니다."
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsx(_components.li, {
        children: "상수명은 영문 대문자, 숫자, 언더바 조합으로 정의한다."
      }), "\n", _jsx(_components.li, {
        children: "상수명의 제일 앞글자는 영문 대문자만 올 수 있다."
      }), "\n"]
    }), "\n", _jsx(_components.div, {
      className: "rehype-code-title",
      children: "/src/constants/some.ts"
    }), _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "hljs language-ts",
        children: [_jsx(_components.span, {
          className: "hljs-keyword",
          children: "export"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "const"
        }), " ", _jsx(_components.span, {
          className: "hljs-variable constant_",
          children: "SOME_NAME"
        }), " = ", _jsx(_components.span, {
          className: "hljs-string",
          children: "'a'"
        }), ";\r\n", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "export"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "const"
        }), " ", _jsx(_components.span, {
          className: "hljs-variable constant_",
          children: "SOME_NAME_99"
        }), " = ", _jsx(_components.span, {
          className: "hljs-number",
          children: "99"
        }), ";\n"]
      })
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "hooks"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["사용자 지정 hook(Custom hook) 모음 폴더입니다.", _jsx(_components.br, {}), "\n", "파일명은 함수명과 일치시킵니다.", _jsx(_components.br, {}), "\n", "아래는 mouse 클릭 여부를 판별하는 hook 코드입니다."]
    }), "\n", _jsx(_components.div, {
      className: "rehype-code-title",
      children: "/src/hook/useMousePressed.ts"
    }), _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "hljs language-ts",
        children: [_jsx(_components.span, {
          className: "hljs-keyword",
          children: "import"
        }), " { useState, useEffect } ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "from"
        }), " ", _jsx(_components.span, {
          className: "hljs-string",
          children: "'react'"
        }), ";\r\n\r\n", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "export"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "default"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "function"
        }), " ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "useMousePressed"
        }), "(", _jsx(_components.span, {
          className: "hljs-params"
        }), ") {\r\n  ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "const"
        }), " [mousePressed, setMousePressed] = ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "useState"
        }), "(", _jsx(_components.span, {
          className: "hljs-literal",
          children: "false"
        }), ");\r\n\r\n  ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "function"
        }), " ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "handleMouseDown"
        }), "(", _jsx(_components.span, {
          className: "hljs-params"
        }), ") {\r\n    ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "setMousePressed"
        }), "(", _jsx(_components.span, {
          className: "hljs-literal",
          children: "true"
        }), ");\r\n  }\r\n\r\n  ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "function"
        }), " ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "handleMouseUp"
        }), "(", _jsx(_components.span, {
          className: "hljs-params"
        }), ") {\r\n    ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "setMousePressed"
        }), "(", _jsx(_components.span, {
          className: "hljs-literal",
          children: "false"
        }), ");\r\n  }\r\n\r\n  ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "useEffect"
        }), "(", _jsx(_components.span, {
          className: "hljs-function",
          children: "() =>"
        }), " {\r\n    ", _jsx(_components.span, {
          className: "hljs-variable language_",
          children: "window"
        }), ".", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "addEventListener"
        }), "(", _jsx(_components.span, {
          className: "hljs-string",
          children: "'mousedown'"
        }), ", handleMouseDown);\r\n    ", _jsx(_components.span, {
          className: "hljs-variable language_",
          children: "window"
        }), ".", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "addEventListener"
        }), "(", _jsx(_components.span, {
          className: "hljs-string",
          children: "'mouseup'"
        }), ", handleMouseUp);\r\n\r\n    ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "return"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "function"
        }), " ", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "cleanup"
        }), "(", _jsx(_components.span, {
          className: "hljs-params"
        }), ") {\r\n      ", _jsx(_components.span, {
          className: "hljs-variable language_",
          children: "window"
        }), ".", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "removeEventListener"
        }), "(", _jsx(_components.span, {
          className: "hljs-string",
          children: "'mousedown'"
        }), ", handleMouseDown);\r\n      ", _jsx(_components.span, {
          className: "hljs-variable language_",
          children: "window"
        }), ".", _jsx(_components.span, {
          className: "hljs-title function_",
          children: "removeEventListener"
        }), "(", _jsx(_components.span, {
          className: "hljs-string",
          children: "'mouseup'"
        }), ", handleMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "return"
        }), " mousePressed;\r\n}\n"]
      })
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "services"
      })
    }), "\n", _jsx(_components.p, {
      children: "서버에서 내려받은 데이터를 UI 컴포넌트에 넘기기 전 가공하는 함수들을 관리합니다."
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "stores"
      })
    }), "\n", _jsx(_components.p, {
      children: "redux 파일들을 관리하는 폴더입니다."
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "styles"
      })
    }), "\n", _jsx(_components.p, {
      children: "style 파일들을 관리하는 폴더입니다."
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "types"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["type과 interface를 관리하는 폴더입니다.", _jsx(_components.br, {}), "\n", "type 이름은 ", _jsx(_components.code, {
        children: "T"
      }), ", interface 이름은 ", _jsx(_components.code, {
        children: "I"
      }), " 로 시작합니다."]
    }), "\n", _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "hljs language-ts",
        children: [_jsx(_components.span, {
          className: "hljs-keyword",
          children: "export"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "type"
        }), " ", _jsx(_components.span, {
          className: "hljs-title class_",
          children: "TCompany"
        }), " = {\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "name"
        }), ": ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "string"
        }), ";\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "join"
        }), ": [", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ", ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), "];\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "leave"
        }), ": [", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ", ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), "];\r\n  size?: ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ";\r\n};\r\n\r\n", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "export"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "type"
        }), " ", _jsx(_components.span, {
          className: "hljs-title class_",
          children: "TProject"
        }), " = {\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "name"
        }), ": ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "string"
        }), ";\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "started"
        }), ": [", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ", ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), "];\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "ended"
        }), ": [", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ", ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), "];\r\n  size?: ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ";\r\n};\r\n\r\n", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "export"
        }), " ", _jsx(_components.span, {
          className: "hljs-keyword",
          children: "interface"
        }), " ", _jsx(_components.span, {
          className: "hljs-title class_",
          children: "IHistory"
        }), " {\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "index"
        }), ": ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ";\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "key"
        }), ": ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "string"
        }), ";\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "year"
        }), ": ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ";\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "yearSize"
        }), ": ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ";\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "month"
        }), ": ", _jsx(_components.span, {
          className: "hljs-built_in",
          children: "number"
        }), ";\r\n  company?: ", _jsx(_components.span, {
          className: "hljs-title class_",
          children: "TCompany"
        }), " | ", _jsx(_components.span, {
          className: "hljs-literal",
          children: "undefined"
        }), ";\r\n  project?: ", _jsx(_components.span, {
          className: "hljs-title class_",
          children: "TProject"
        }), " | ", _jsx(_components.span, {
          className: "hljs-literal",
          children: "undefined"
        }), ";\r\n}\n"]
      })
    }), "\n", _jsx(_components.h3, {
      children: _jsx(_components.code, {
        children: "utils"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["순수 함수들을 모아놓은 폴더입니다.", _jsx(_components.br, {}), "\n", "파일명은 ", _jsx(_components.code, {
        children: "array.ts"
      }), ", ", _jsx(_components.code, {
        children: "file.ts"
      }), ", ", _jsx(_components.code, {
        children: "string.ts"
      }), " 과 같이 인자의 타입과 통일합니다."]
    }), "\n", _jsx(_components.p, {
      children: "end."
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);
  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {
    children: _jsx(_createMdxContent, props)
  })) : _createMdxContent(props);
}
return {
  default: MDXContent
};
f:T1f26,/*@jsxRuntime automatic @jsxImportSource react*/
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = Object.assign({
    p: "p",
    code: "code",
    h3: "h3",
    br: "br",
    pre: "pre",
    div: "div",
    span: "span",
    blockquote: "blockquote",
    h4: "h4"
  }, _provideComponents(), props.components);
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: ["이 글에서는 ", _jsx(_components.code, {
        children: "Github Pages"
      }), " 를 사용하며 삽질하고 헤맸던 것들과 제가 해결한 방법을 공유드리겠습니다."]
    }), "\n", _jsx(_components.h3, {
      children: "Github Pages 란?"
    }), "\n", _jsxs(_components.p, {
      children: ["Repository에 있는 HTML, CSS, Javascript 파일들을 가지고 웹 사이트에 게시하는 정적 사이트 호스팅 서비스입니다.", _jsx(_components.br, {}), "\n", "사용자는 Github Pages에서 제공하는 ", _jsx(_components.code, {
        children: "<username>.github.io"
      }), " 형식의 기본 도메인을 사용하거나 구매한 Custom 도메인을 Github Pages 서비스에 연결할 수 있습니다.", _jsx(_components.br, {}), "\n", "배포는 ", _jsx(_components.code, {
        children: "Github Actions"
      }), " 워크플로를 작성하여 작업 Branch의 push event를 감지하여 자동으로 배포되도록 구성하는 경우가 많습니다.", _jsx(_components.br, {}), "\n", "Github Pages 는 기본적으로 ", _jsx(_components.code, {
        children: "jekyll"
      }), " 이라는 정적 사이트 생성기를 내장하고 있습니다."]
    }), "\n", _jsx(_components.h3, {
      children: "jekyll 이란?"
    }), "\n", _jsxs(_components.p, {
      children: [_jsx(_components.code, {
        children: "jekyll"
      }), "은 루비 기반의 정적 사이트 생성기입니다. ", _jsx(_components.code, {
        children: "HTML"
      }), ", ", _jsx(_components.code, {
        children: "Markdown"
      }), "등의 마크업 언어로 작성된 텍스트를 사용하여 정적 웹 사이트를 만듭니다."]
    }), "\n", _jsx(_components.h3, {
      children: ".nojekyll"
    }), "\n", _jsxs(_components.p, {
      children: ["저처럼 ", _jsx(_components.code, {
        children: "next.js"
      }), "를 사용하여 정적웹사이트를 생성할 경우 Github Pages에 이미 내장되어있는 ", _jsx(_components.code, {
        children: "jekyll"
      }), " 과 충돌하게 됩니다.", _jsx(_components.br, {}), "\n", "이것을 방지하기 위해선 Github Pages가 바라보고 있는 Branch Root경로에 ", _jsx(_components.code, {
        children: ".nojekyll"
      }), " 파일을 생성해 주어야합니다."]
    }), "\n", _jsxs(_components.p, {
      children: ["※ ", _jsx(_components.code, {
        children: ".nojekyll"
      }), " 파일은 아무런 내용이 없는 빈파일이며 Root에 존재하기만 하면 됩니다."]
    }), "\n", _jsx(_components.h3, {
      children: "gh-pages"
    }), "\n", _jsxs(_components.p, {
      children: ["터미널에서 다이렉트로 배포하고 싶다면 ", _jsx(_components.code, {
        children: "gh-pages"
      }), " 모듈을 사용하면 됩니다."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        className: "",
        children: "yarn add -D gh-pages\n"
      })
    }), "\n", _jsxs(_components.p, {
      children: ["그 후 ", _jsx(_components.code, {
        children: "package.json"
      }), " 에 배포 스크립트를 추가합니다."]
    }), "\n", _jsx(_components.div, {
      className: "rehype-code-title",
      children: "package.json"
    }), _jsx(_components.pre, {
      children: _jsxs(_components.code, {
        className: "hljs language-json",
        children: [_jsx(_components.span, {
          className: "hljs-punctuation",
          children: "{"
        }), "\r\n  ...\r\n  ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "\"scripts\""
        }), _jsx(_components.span, {
          className: "hljs-punctuation",
          children: ":"
        }), " ", _jsx(_components.span, {
          className: "hljs-punctuation",
          children: "{"
        }), "\r\n    ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "\"build\""
        }), _jsx(_components.span, {
          className: "hljs-punctuation",
          children: ":"
        }), " ", _jsx(_components.span, {
          className: "hljs-string",
          children: "\"next build\""
        }), _jsx(_components.span, {
          className: "hljs-punctuation",
          children: ","
        }), "\r\n    ", _jsx(_components.span, {
          className: "hljs-attr",
          children: "\"deploy\""
        }), _jsx(_components.span, {
          className: "hljs-punctuation",
          children: ":"
        }), " ", _jsx(_components.span, {
          className: "hljs-string",
          children: "\"next build && gh-pages -d out --dotfiles\""
        }), "\r\n  ", _jsx(_components.span, {
          className: "hljs-punctuation",
          children: "}"
        }), "\r\n  ...\r\n", _jsx(_components.span, {
          className: "hljs-punctuation",
          children: "}"
        }), "\n"]
      })
    }), "\n", _jsxs(_components.p, {
      children: ["위 코드에서 ", _jsx(_components.code, {
        children: "deploy"
      }), " 스크립트는 ", _jsx(_components.code, {
        children: "next"
      }), " 빌드 후, 빌드된 결과물이 있는 ", _jsx(_components.code, {
        children: "out"
      }), " 폴더를 ", _jsx(_components.code, {
        children: "gh-pages"
      }), " Branch에 ", _jsx(_components.code, {
        children: "Push"
      }), " 하는 동작을 합니다.", _jsx(_components.br, {}), "\n", _jsx(_components.code, {
        children: "-b"
      }), " 옵션을 사용하면 배포할 Branch를 설정할 수 있습니다. (기본값은 ", _jsx(_components.code, {
        children: "gh-pages"
      }), " 입니다.)"]
    }), "\n", _jsxs(_components.blockquote, {
      children: ["\n", _jsx(_components.h4, {
        children: "Good to know"
      }), "\n", _jsxs(_components.p, {
        children: [_jsx(_components.code, {
          children: "--dotfiles"
        }), " 옵션은 ", _jsx(_components.code, {
          children: "."
        }), "으로 시작하는 파일을 무시하지 않고 Push에 포함하는 옵션입니다.", _jsx(_components.br, {}), "\n", ".nojekyll 파트에서 설명한 ", _jsx(_components.code, {
          children: ".nojekyll"
        }), " 파일을 함께 업로드 하기 위해 추가했습니다."]
      }), "\n"]
    }), "\n", _jsx(_components.h3, {
      children: "CNAME"
    }), "\n", _jsxs(_components.p, {
      children: ["사용자가 구매한 도메인을 Github Pages에 적용할 경우 배포 후에 도메인 설정이 풀리는 경우가 발생합니다.", _jsx(_components.br, {}), "\n", "이럴땐 Github Pages가 바라보는 Branch Root 경로에 ", _jsx(_components.code, {
        children: "CNAME"
      }), "이라는 파일을 만들어준 다음 구매한 도메인을 입력하면 됩니다."]
    }), "\n", _jsx(_components.div, {
      className: "rehype-code-title",
      children: "CNAME"
    }), _jsx(_components.pre, {
      children: _jsx(_components.code, {
        className: "hljs language-md",
        children: "shinyongjun.com\n"
      })
    }), "\n", _jsx(_components.p, {
      children: "End."
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);
  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {
    children: _jsx(_createMdxContent, props)
  })) : _createMdxContent(props);
}
return {
  default: MDXContent
};
b:[["$","$Lc",null,{"postData":{"title":"Next.js 프로젝트 폴더 구성 과 개발 규칙","date":"$D2023-08-25T11:09:00.000Z","categories":["next.js"],"slug":"11","mdx":{"compiledSource":"$d","frontmatter":{},"scope":{}},"seriesIndex":"$undefined"}}],["$","$Le",null,{"prevPost":{"title":"Github Pages 블로그 구축시 알아두면 좋은것들","date":"$D2023-08-21T09:41:00.000Z","categories":["next.js","blog","github"],"slug":"10","mdx":{"compiledSource":"$f","frontmatter":{},"scope":{}}},"nextPost":"$undefined"}],["$","$L10",null,{"postDetail":true}],["$","$L11",null,{}]]
